version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres-sso
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - ./keycloak_data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - keycloak-network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak-sso
    restart: always
    environment:
      KC_DB: postgres
      KC_DB_URL: "jdbc:postgresql://postgres:5432/${POSTGRES_DB}"
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_BOOTSTRAP_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD}
      KC_HTTPS_CERTIFICATE_FILE: /etc/keycloak/certs/tls.crt.pem
      KC_HTTPS_CERTIFICATE_KEY_FILE: /etc/keycloak/certs/tls.key.pem
    command: ["start-dev", "--http-port", "8080", "--https-port", "8443"]
    ports:
      - "8080:8080"
      - "8443:8443"
    volumes:
      - ./keycloak_data/certs:/etc/keycloak/certs
    depends_on:
      - postgres
    networks:
      - keycloak-network

networks:
  keycloak-network:
    driver: bridge
